<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaoyao.mall.dao.GoodsMapperExt" >
  <resultMap id="BaseResultMap" type="com.xiaoyao.mall.model.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="is_sale" property="isSale" jdbcType="BIT" />
    <result column="seller_id" property="sellerId" jdbcType="INTEGER" />
    <result column="vip_price" property="vipPrice" jdbcType="DECIMAL" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="model" property="model" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xiaoyao.mall.model.Goods" extends="BaseResultMap" >
    <result column="url" property="url" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, description, number, type_id, price, user_id, create_date, area, is_sale, 
    seller_id, vip_price, level, model ,url
  </sql>
  <sql id="Blob_Column_List" >
    url
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xiaoyao.mall.model.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from T_MALL_GOODS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xiaoyao.mall.model.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_MALL_GOODS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from T_MALL_GOODS
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from T_MALL_GOODS
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaoyao.mall.model.GoodsExample" >
    delete from T_MALL_GOODS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaoyao.mall.model.Goods" useGeneratedKeys="true" keyProperty="id">
    insert into T_MALL_GOODS (id, name, description, 
      number, type_id, price, 
      user_id, create_date, area, 
      is_sale, seller_id, vip_price, 
      level, model, url
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{number,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, 
      #{userId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{area,jdbcType=VARCHAR}, 
      #{isSale,jdbcType=BIT}, #{sellerId,jdbcType=INTEGER}, #{vipPrice,jdbcType=DECIMAL}, 
      #{level,jdbcType=INTEGER}, #{model,jdbcType=VARCHAR}, #{url,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoyao.mall.model.Goods" useGeneratedKeys="true" keyProperty="id">
    insert into T_MALL_GOODS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="isSale != null" >
        is_sale,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="vipPrice != null" >
        vip_price,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="model != null" >
        model,
      </if>
      <if test="url != null" >
        url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="area != null" >
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="isSale != null" >
        #{isSale,jdbcType=BIT},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="vipPrice != null" >
        #{vipPrice,jdbcType=DECIMAL},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="model != null" >
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaoyao.mall.model.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from T_MALL_GOODS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_MALL_GOODS
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.area != null" >
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.isSale != null" >
        is_sale = #{record.isSale,jdbcType=BIT},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.vipPrice != null" >
        vip_price = #{record.vipPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.model != null" >
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update T_MALL_GOODS
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      user_id = #{record.userId,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      area = #{record.area,jdbcType=VARCHAR},
      is_sale = #{record.isSale,jdbcType=BIT},
      seller_id = #{record.sellerId,jdbcType=INTEGER},
      vip_price = #{record.vipPrice,jdbcType=DECIMAL},
      level = #{record.level,jdbcType=INTEGER},
      model = #{record.model,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_MALL_GOODS
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      user_id = #{record.userId,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      area = #{record.area,jdbcType=VARCHAR},
      is_sale = #{record.isSale,jdbcType=BIT},
      seller_id = #{record.sellerId,jdbcType=INTEGER},
      vip_price = #{record.vipPrice,jdbcType=DECIMAL},
      level = #{record.level,jdbcType=INTEGER},
      model = #{record.model,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoyao.mall.model.Goods" >
    update T_MALL_GOODS
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="isSale != null" >
        is_sale = #{isSale,jdbcType=BIT},
      </if>
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="vipPrice != null" >
        vip_price = #{vipPrice,jdbcType=DECIMAL},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="model != null" >
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiaoyao.mall.model.Goods" >
    update T_MALL_GOODS
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      area = #{area,jdbcType=VARCHAR},
      is_sale = #{isSale,jdbcType=BIT},
      seller_id = #{sellerId,jdbcType=INTEGER},
      vip_price = #{vipPrice,jdbcType=DECIMAL},
      level = #{level,jdbcType=INTEGER},
      model = #{model,jdbcType=VARCHAR},
      url = #{url,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoyao.mall.model.Goods" >
    update T_MALL_GOODS
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      area = #{area,jdbcType=VARCHAR},
      is_sale = #{isSale,jdbcType=BIT},
      seller_id = #{sellerId,jdbcType=INTEGER},
      vip_price = #{vipPrice,jdbcType=DECIMAL},
      level = #{level,jdbcType=INTEGER},
      model = #{model,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
 <!-- 分页查询 -->
 <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.xiaoyao.mall.model.GoodsExample" >
   select
   <if test="distinct" >
     distinct
   </if>
   <include refid="Base_Column_List" />
   from T_MALL_GOODS
   <if test="_parameter != null" >
     <include refid="Example_Where_Clause" />
   </if>
   <if test="orderByClause != null" >
     order by ${orderByClause}
   </if>
 </select>
 
  <!-- 销量分页查询 -->
 <select id="querySalesByPage" resultType="com.xiaoyao.mall.model.GoodsQuery" parameterType="com.xiaoyao.mall.model.GoodsQuery" >
   SELECT  
   t1.id, t1.name, t1.description, t1.number, t1.type_id, 
   t1.price, t1.user_id, t1.create_date, t1.url, t1.area, 
   t1.is_sale, t1.seller_id, t1.vip_price, t1.level,
   count(t2.id) sales 
   FROM T_MALL_GOODS t1 
   LEFT JOIN T_GOODS_ORDER t2 on t2.goods_id = t1.id 
   where t1.type_id= #{typeId}  
   GROUP BY t1.id 
   <if test="orderByClause != null" >
     order by ${orderByClause}
   </if>
 </select>
 
</mapper>